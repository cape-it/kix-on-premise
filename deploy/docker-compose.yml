version: '3'

services:
  proxy:
    image: ${REGISTRY}/kix18/on-premise/proxy:${IMAGE_TAG}
    depends_on:
      - backend
      - frontend
    ports:
      - ${BACKEND_PORT}:8080
      - ${FRONTEND_PORT}:80
    env_file:
      - environment
    volumes:
      - ./proxy/ssl:/etc/nginx/conf.d/ssl
      - ./proxy/non-ssl.conf:/etc/nginx/conf.d/non-ssl.conf
      - ./proxy/ssl.conf:/etc/nginx/conf.d/ssl.conf
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    logging:
      options:
        max-size: "100m"
        max-file: "5"

  backend:
    image: ${REGISTRY}/kix18/on-premise/backend:${IMAGE_TAG}
    user: "110010100"
    depends_on:
      - redis
    env_file: 
      - environment
    volumes:
      - shared:/mnt/shared
      - backend:/mnt/data
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    logging:
      options:
        max-size: "100m"
        max-file: "5"

  frontend:
    image: ${REGISTRY}/kix18/on-premise/frontend:${IMAGE_TAG}
    user: "110010100"
    depends_on:
      - backend
      - redis
    environment:
      - USE_SSL=0
      - REDIS_CACHE_HOST=redis
      - FRONTEND_NOTIFICATION_ID=kix-cloud-frontend
      - NOTIFICATION_URL=http://frontend:3000/notifications
      - BACKEND_API_URL=http://backend:8080/api/v1
    env_file: 
      - environment
    volumes:
      - shared:/mnt/shared
      - frontend:/mnt/data
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    logging:
      options:
        max-size: "100m"

  db:
    image: postgres:12-alpine
    hostname: db
    env_file: 
      - environment
    volumes:
      - db:/var/lib/postgresql/data
      - ./db/postgresql.conf:/etc/postgresql/postgresql.conf
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    shm_size: '2gb'
    

  redis:
    image: ${REGISTRY}/kix18/on-premise/redis:${IMAGE_TAG}
    deploy:
      replicas: 1
      restart_policy:
        condition: any

volumes:
    shared:
    db:
    backend:
    frontend:
